// db.js
const mysql = require('mysql2/promise');
const fs = require('fs');
const path = require('path');

/**
 * ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ Amazon RDS (‡∏´‡∏£‡∏∑‡∏≠ Aurora MySQL) ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ SSL:
 * - ‡∏ï‡∏±‡πâ‡∏á ENV: DB_SSL=true
 * - ‡πÉ‡∏™‡πà‡πÑ‡∏ü‡∏•‡πå CA (Amazon Root CA 1) ‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà ./certs/rds-ca.pem ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏ path ‡πÉ‡∏ô DB_SSL_CA
 *   (‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å AWS Trust Store)
 */
const useSSL = /^true$/i.test(process.env.DB_SSL || '');
let ssl = undefined;

if (useSSL) {
  try {
    const caPath = process.env.DB_SSL_CA || path.join(__dirname, 'certs', 'rds-ca.pem');
    ssl = { ca: fs.readFileSync(caPath, 'utf8') };
    console.log('üîê RDS SSL enabled');
  } catch (e) {
    console.warn('‚ö†Ô∏è  ‡πÄ‡∏õ‡∏¥‡∏î DB_SSL ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå CA (‡∏Ç‡πâ‡∏≤‡∏° SSL).', e.message);
  }
}

const pool = mysql.createPool({
  host:     process.env.DB_HOST,
  user:     process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
  port:     Number(process.env.DB_PORT || 3306),
  waitForConnections: true,
  connectionLimit: Number(process.env.DB_POOL_SIZE || 10),
  queueLimit: 0,
  ssl
});

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
(async () => {
  try {
    const conn = await pool.getConnection();
    console.log('‚úÖ Connected to MySQL');
    conn.release();
  } catch (err) {
    console.error('‚ùå Database connection failed:', err.message);
  }
})();

module.exports = pool;
