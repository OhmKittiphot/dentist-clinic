const path = require('path');
const express = require('express');
const dotenv = require('dotenv');
const morgan = require('morgan');
const helmet = require('helmet');
const compression = require('compression');
const crypto = require('crypto');
const cookieParser = require('cookie-parser');

dotenv.config();

const app = express();
const PORT = process.env.PORT || 80;

// ‡πÇ‡∏´‡∏•‡∏î connection pool (MySQL RDS)
const db = require('./db'); // mysql2/promise

/* =========================
 * 0) ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢/‡∏Ñ‡πà‡∏≤ ENV ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö S3/CloudFront
 * ========================= */
const S3_ALLOWED_IMG = [
  "https://*.amazonaws.com",    // S3 URL ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÄ‡∏ä‡πà‡∏ô s3.amazonaws.com ‡∏´‡∏£‡∏∑‡∏≠ <bucket>.s3.<region>.amazonaws.com
  "https://*.cloudfront.net"    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ CloudFront ‡∏´‡∏ô‡πâ‡∏≤ S3
];
// ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÇ‡∏î‡πÄ‡∏°‡∏ô custom CDN ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≠‡∏°‡∏°‡πà‡∏≤‡πÉ‡∏ô ENV: CDN_IMG_HOSTS="https://img.example.com,https://cdn.example.com"
if (process.env.CDN_IMG_HOSTS) {
  S3_ALLOWED_IMG.push(...process.env.CDN_IMG_HOSTS.split(',').map(s => s.trim()).filter(Boolean));
}

/* =========================
 * 1) View Engine
 * ========================= */
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

/* =========================
 * 2) Middlewares
 * ========================= */

// ‡∏™‡∏£‡πâ‡∏≤‡∏á nonce ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CSP ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö <script nonce=...>
app.use((req, res, next) => {
  res.locals.nonce = crypto.randomBytes(16).toString('base64');
  next();
});

// Helmet + CSP (‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å S3/CloudFront)
app.use(helmet({
  // ‡∏ö‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏°‡∏µ <img> ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≤‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î CORP ‡πÄ‡∏õ‡πá‡∏ô cross-origin
  crossOriginResourcePolicy: { policy: 'cross-origin' },
  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ COEP/COOP ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏°‡∏á‡∏ß‡∏î ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î‡∏ù‡∏±‡πà‡∏á embedder ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏†‡∏≤‡∏û/‡∏ü‡∏≠‡∏ô‡∏ï‡πå
  crossOriginEmbedderPolicy: false,
  contentSecurityPolicy: {
    useDefaults: true,
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: [
        "'self'",
        (req, res) => `'nonce-${res.locals.nonce}'`,
        "https://code.jquery.com",
        "https://cdn.jsdelivr.net",
        "https://stackpath.bootstrapcdn.com"
      ],
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö attr inline ‡∏à‡∏≤‡∏Å‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß
      scriptSrcAttr: ["'unsafe-inline'"],
      styleSrc: [
        "'self'",
        "https://stackpath.bootstrapcdn.com",
        "https://cdnjs.cloudflare.com",
        "'unsafe-inline'"
      ],
      fontSrc: ["'self'", "https://cdnjs.cloudflare.com"],
      // üëâ ‡πÄ‡∏û‡∏¥‡πà‡∏° S3/CloudFront/CDN ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ó‡∏µ‡πà imgSrc
      imgSrc: [
        "'self'",
        "data:",
        "http://localhost:3000",
        ...S3_ALLOWED_IMG
      ],
      connectSrc: [
        "'self'",
        "https://stackpath.bootstrapcdn.com",
        "https://cdn.jsdelivr.net"
      ],
      // ‡∏ö‡∏≤‡∏á‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ media/workers ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≤‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô‚Äî‡πÄ‡∏ï‡∏¥‡∏°‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ
    },
  },
}));
app.use(compression());

// Static assets (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô auth)
app.use('/public', express.static(path.join(__dirname, 'public')));

// Core middlewares
app.use(cookieParser());
// ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: body ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏°‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ multer ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ó‡∏ô; ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ ‡πÄ‡∏û‡∏¥‡πà‡∏° limit ‡πÑ‡∏î‡πâ
app.use(express.urlencoded({ extended: true, limit: '2mb' }));
app.use(express.json({ limit: '2mb' }));
app.use(morgan('dev'));

/* =========================
 * 3) Routes
 * ========================= */
const { authenticateToken } = require('./utils/auth');
const authRouter   = require('./routes/auth');
const dentRouter   = require('./routes/dentist');
const staffRouter  = require('./routes/staff');
const pantRouter   = require('./routes/patient');

// Root ‚Üí login
app.get('/', (req, res) => { res.redirect('/login'); });

// Terms of Service
app.get('/terms', (req, res) => { res.render('terms'); });

// Debug users (dev only)
app.get('/debug-users', async (req, res) => {
  try {
    const [rows] = await db.query("SELECT id, citizen_id, role, password FROM users");
    res.json(rows);
  } catch (err) {
    console.error("DB error:", err);
    res.status(500).json({ error: err.message });
  }
});

// Healthcheck (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö ALB/EC2)
app.get('/healthz', (req, res) => res.status(200).send('ok'));

// Auth + Protected
app.use('/', authRouter);
app.use('/dentist', authenticateToken, dentRouter);
app.use('/staff',   authenticateToken, staffRouter);
app.use('/patient', authenticateToken, pantRouter);

/* =========================
 * 4) Handlers
 * ========================= */
app.use((req, res) => res.status(404).send('Not Found'));

app.use((err, req, res, next) => {
  console.error(err.stack);
  // ‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏´‡πá‡∏ô error detail ‡πÉ‡∏ô dev ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  res.status(500).send(process.env.NODE_ENV === 'production' ? 'Server Error' : (err.message || 'Server Error'));
});

/* =========================
 * 5) Helpers for EJS
 * ========================= */
app.locals.getStatusText = function(status) {
  const statusMap = {
    'PENDING':   '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
    'CONFIRMED': '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
    'COMPLETED': '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
    'CANCELLED': '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
    'NEW':       '‡πÉ‡∏´‡∏°‡πà',
    'paid':      '‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß',
    'pending':   '‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞'
  };
  return statusMap[status] || status;
};

/* =========================
 * 6) Server Start
 * ========================= */
app.listen(PORT, () => {
  console.log(`‚úÖ Server running: http://localhost:${PORT}`);
  if (!process.env.AWS_REGION || !process.env.S3_BUCKET) {
    console.warn('‚ö†Ô∏è  AWS_REGION/S3_BUCKET ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤: ‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å S3 ‡∏≠‡∏≤‡∏à‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î/‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á ENV ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö');
  }
});
